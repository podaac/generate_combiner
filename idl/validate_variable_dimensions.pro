;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION validate_variable_dimensions,$
             i_filename,$
             i_variable_name,$
             i_num_lons,$       ; Same as Number_of_Scan_Lines = 2030
             i_num_lats,$       ; Same as pixel_control_points = 1354
             i_variable_array

; Function validate the input variable to make sure the dimensions, and type are correct.  Returns 1 if the variable is valid and 0 if not.
;
; Notes:
;
;     1. If the variable is not valid, the error message will logged and a sigevent will be sent.
;     2. The variable names supported are hard-coded.  If the input variable name is not recognized, it will be returned as invalid.
;     3. The SIZE() function will be used to gather information about the variable.
;     4. The following variables are supported in this function for validation:
;
;             'cntl_pt_cols'
;             'cntl_pt_rows'
;             'msec'
;             'year'
;             'day'
;             'l2_flags'
;             'longitude'
;             'latitude'
;             'chlor_a'
;             'sst'
;             'bias_sst'
;             'stdv_sst'
;             'sst4'
;             'bias_sst4'
;             'stdv_sst4'
;             'K_490'
;             'qual_sst'
;             'qual_sst4'
;
; Some helpful info about a NetCDF file and its content.
;
;        Number_of_Scan_Lines = 2030 ;
;        Pixels_per_Scan_Line = 1354 ;
;        pixel_control_points = 1354 ;
;        total_band_number = 24 ;
;        band_number = 16 ;
;
;
;IDL> help, r_dataset_array
;R_DATASET_ARRAY INT       = Array[1354, 2030]
;IDL> size_info = size(r_dataset_array)
;IDL> print, size_info
;           2        1354        2030           2     2748620
;IDL> print, size_info[0]
;           2
;IDL> print, size_info[1]
;        1354
;IDL> print, size_info[2]
;        2030
;IDL> print, size_info[3]
;           2
;IDL> print, size_info[4]
;     2748620
;
;------------------------------------------------------------------------------------------------

; Load constants.

@modis_data_config.cfg

; Define local variables.

o_variable_valid_flag = 1;  Start out assuming the variable is valid, i.e. the dimensions and type are correct.

; If we run across problem during operation of the combiner, there's a way to skip the validation
; by setting GHRSST_MODIS_L2_COMBINER_SKIP_VARIABLE_VALIDATION to 'true' or 'TRUE'.

if ((STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_SKIP_VARIABLE_VALIDATION')) NE '')      AND $
    (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_SKIP_VARIABLE_VALIDATION')) EQ 'TRUE')) then begin
;    print, 'GHRSST_MODIS_L2_COMBINER_SKIP_VARIABLE_VALIDATION is TRUE.  Skipping validation of variable ' + i_variable_name
    return, o_variable_valid_flag;
endif

routine_name = "validate_variable_dimensions:";
msg_type = "";
i_data = "";

; Get the DEBUG_MODE if it is set.

debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif

; Expected size of the dimensions.

CONST_NUMBER_OF_SCAN_LINES  = i_num_lons;
CONST_PIXELS_PER_SCAN_LINE  = i_num_lats;
CONST_PIXELS_CONTROL_POINTS = i_num_lats;

; Note from Sean Baily from OBPG on 10/30/2014 8:04 AM

;This is not unusual.  There are quite a few granules that are 204 scans (2040
;lines) and even some that are 202 scans (2020 lines).  Each scan is 10 lines and takes about 1.477 seconds to create...the day isn't easily divided by 1.477 seconds, thus the occasional extra (or missing) scan.
;
; So with that, we reset the value of CONST_NUMBER_OF_SCAN_LINES to 2020 to catch any files that has a smaller size.

CONST_NUMBER_OF_SCAN_LINES  = i_num_lons;   2020 * 1354 = 2735080
CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE = LONG(CONST_NUMBER_OF_SCAN_LINES) * LONG(CONST_PIXELS_PER_SCAN_LINE); Note: We have to convert to LONG otherwise the number will be negative.   (Product is 2748620)

; String version of the above constants.

CONST_NUMBER_OF_SCAN_LINES_CHAR  = STRTRIM(STRING(CONST_NUMBER_OF_SCAN_LINES),2);
CONST_PIXELS_PER_SCAN_LINE_CHAR  = STRTRIM(STRING(CONST_PIXELS_PER_SCAN_LINE),2);
CONST_PIXELS_CONTROL_POINTS_CHAR = STRTRIM(STRING(CONST_PIXELS_CONTROL_POINTS),2);
CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR = STRTRIM(STRING(CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE),2); 

;IDL> size_info = size(r_dataset_array)
;IDL> print, size_info
;           2        1354        2030           2     2748620

; Indices to the size_info array.

NUM_DIMENSIONS_INDEX  = 0;
INDEX_1_INDEX         = 1;
INDEX_2_INDEX         = 2;
VARIABLE_TYPE_INDEX   = 3;
NUM_OF_ELEMENTS_INDEX = 4;

size_info = SIZE(i_variable_array);

;  IDL> b = fltarr(5)
;  IDL> print, size(b)
;             1           5           4           5
;             0           1           2           3
;

; Common IDL data types:
;
;    0 UNDEFINED
;    1 BYTE
;    2 INT    (short,          2-byte integer)
;    3 LONG   (signed integer, 4-type integer)
;    4 FLOAT  (float,          4-byte float)
;    5 DOUBLE (double,         8-byte double)

BYTE_TYPE   = 1;
INT_TYPE    = 2;
LONG_TYPE   = 3;
FLOAT_TYPE  = 4;
DOUBLE_TYPE = 5;

num_of_dimensions = size_info[NUM_DIMENSIONS_INDEX];

;  IDL> print, size(b)
;             1           5           4           5

; If the number of dimension is 1, we subtract 1 from indices after 1;

if (num_of_dimensions EQ 1) then begin
    INDEX_1_INDEX         = 1;  5 in example of fltarr(5)
    VARIABLE_TYPE_INDEX   = 2;  4 in example of fltarr(5)
    NUM_OF_ELEMENTS_INDEX = 3;  5 in example of fltarr(5)
endif

verify_variable_flag = 0; Flag to indicate if the variable has been verified.  This would handle the case of a variable name we don't recognize in this function.

;----------------------------------------------------------------------------------------------------------------------------------
; Validate 1-dimension variables:
;
;             'cntl_pt_cols'
;             'cntl_pt_rows'
;             'msec'
;             'year';
;             'day';
;----------------------------------------------------------------------------------------------------------------------------------

; CONST_NUMBER_OF_SCAN_LINES  = 2030;
; CONST_PIXELS_PER_SCAN_LINE  = 1354;
; CONST_PIXELS_CONTROL_POINTS = 1354 ;

if (i_variable_name EQ 'cntl_pt_cols') then begin
    if (num_of_dimensions NE 1) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 1 dimension' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ' calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE LONG_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(LONG_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: The variable cntl_pt_rows in test file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc contain 2040
;        What that means is our comparison cannot be an exact compare for validity.  We have to use "less than" for not valid variable.
; IDL> combine_netcdf_sst_and_sst4_files_with_ all _ 2007 _ files _ test
; combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
; combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
; combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
; combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
; validate_variable_dimensions:ERROR: Expected dimension_1 in variable cntl_pt_rows to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
; validate_variable_dimensions:ERROR: Expected variable cntl_pt_rows to contain 2030 elements, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
; Thu Oct 23 11:09:53 2014 ERROR [validate_variable_dimensions:] Cannot read variable cntl_pt_rows due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
; % Loaded DLM: URL.
; Thu Oct 23 11:09:54 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
; Thu Oct 23 11:09:54 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD

if (i_variable_name EQ 'cntl_pt_rows') then begin
    if (num_of_dimensions NE 1) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 1 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE LONG_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(LONG_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain  at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: The variable msec in test file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc contain 2040
;        What that means is our comparison cannot be an exact compare for validity.  We have to use "less than" for not valid variable.
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_1 in variable msec to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable msec to contain 2030 elements, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:35:12 2014 ERROR [validate_variable_dimensions:] Cannot read variable msec due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:35:13 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:35:13 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD


if (i_variable_name EQ 'msec') then begin
    if (num_of_dimensions NE 1) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 1 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE LONG_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(LONG_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

;print, 'Stopping..'
;stop;

if (i_variable_name EQ 'year')  OR $
   (i_variable_name EQ 'day')   then begin
    if (num_of_dimensions NE 1) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 1 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif else begin
        if (size_info[INDEX_1_INDEX] LT 1) then begin
            print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least ' + STRING(1) + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
            o_variable_valid_flag = 0;
        endif
        if (size_info[VARIABLE_TYPE_INDEX] NE LONG_TYPE) then begin
            print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(LONG_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
            o_variable_valid_flag = 0;
        endif
        if (size_info[NUM_OF_ELEMENTS_INDEX] LT 1) then begin
            print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + STRING(1) + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
            o_variable_valid_flag = 0;
        endif
    endelse
    verify_variable_flag = 1;
endif

;----------------------------------------------------------------------------------------------------------------------------------
; Validate 2-dimensions variables:
;
;             'l2_flags'
;             'longitude'
;             'latitude'
;             'chlor_a'
;             'sst'
;             'bias_sst'
;             'stdv_sst'
;             'sst4'
;             'bias_sst4'
;             'stdv_sst4'
;             'K_490'
;             'qual_sst'
;             'qual_sst4'
;----------------------------------------------------------------------------------------------------------------------------------

; CONST_NUMBER_OF_SCAN_LINES  = 2030;
; CONST_PIXELS_PER_SCAN_LINE  = 1354;
; CONST_PIXELS_CONTROL_POINTS = 1354 ;
; CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE = LONG(CONST_NUMBER_OF_SCAN_LINES) * LONG(CONST_PIXELS_PER_SCAN_LINE);    2748620

; Note: The l2_flags variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.

;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable l2_flags to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable l2_flags to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:19:42 2014 ERROR [validate_variable_dimensions:] Cannot read variable l2_flags due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:19:43 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:19:43 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD


if (i_variable_name EQ 'l2_flags') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE LONG_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(LONG_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: The longitude variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable longitude to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable longitude to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:24:11 2014 ERROR [validate_variable_dimensions:] Cannot read variable longitude due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:24:12 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:24:12 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD


if (i_variable_name EQ 'longitude') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least '  + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE FLOAT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(FLOAT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: The longitude variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable latitude to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable latitude to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:27:22 2014 ERROR [validate_variable_dimensions:] Cannot read variable latitude due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:27:22 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:27:23 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD

if (i_variable_name EQ 'latitude') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least '  + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE FLOAT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(FLOAT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: Something strange.  The chlor_a variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable chlor_a to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;validate_variable_dimensions:ERROR: Expected variable chlor_a to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;Thu Oct 23 11:49:08 2014 ERROR [validate_variable_dimensions:] Cannot read variable chlor_a due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc

if (i_variable_name EQ 'chlor_a')                                      then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] LT CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least '  + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE FLOAT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(FLOAT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE = LONG(CONST_NUMBER_OF_SCAN_LINES) * LONG(CONST_PIXELS_PER_SCAN_LINE);    2748620

; Note: The sst variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable sst to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable sst to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:29:42 2014 ERROR [validate_variable_dimensions:] Cannot read variable sst due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:29:43 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:29:44 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD

if (i_variable_name EQ 'sst') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE INT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(INT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: The bias_sst variable from sample test file contains more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
;
;combine_netcdf_sst_and_sst4_files: i_sst_filename  /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;combine_netcdf_sst_and_sst4_files: i_sst4_filename DUMMY_SST4_FILENAME
;combine_netcdf_sst_and_sst4_files: i_oc_filename   /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT108.nc
;combine_netcdf_sst_and_sst4_files: i_out_filename  /data/dev/scratch/qchau/scratch/temp/A2007060010500
;validate_variable_dimensions:ERROR: Expected dimension_2 in variable bias_sst to be 2030, calculated 2040 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;validate_variable_dimensions:ERROR: Expected variable bias_sst to contain 2748620 elements, calculated 2762160 in file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;Thu Oct 23 11:41:39 2014 ERROR [validate_variable_dimensions:] Cannot read variable bias_sst due to invalid size or type from file /data/dev/users/podaacdev/apache/doc/cgi/getfile/A2007060010500.L2_LAC_AT109_SST.nc
;% Loaded DLM: SEMAPHORE.
;% Loaded DLM: URL.
;Thu Oct 23 11:41:40 2014 ERROR [quarantine_one_staged_dataset] FILE_MOVE_TO_QUARANTINE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD /data/dev/scratch/qchau/scratch/quarantine
;Thu Oct 23 11:41:40 2014 INFO [combine_netcdf_sst_and_sst4_files] FILE_DELETE /data/dev/scratch/qchau/scratch/temp/A2007060010500.LAC_GSSTD

if (i_variable_name EQ 'bias_sst') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] NE CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE INT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(INT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Note: Something strange.  The variable seems to change their sizes.  They seems to contain more than expected.
;       What that means is we have to use "less than" to check for invalid variable.
; 08/18/2016: Added support for VIIRS dataset.  It has the "_triple" in the variable names.


if (i_variable_name EQ 'stdv_sst')  OR (i_variable_name EQ 'sst4')      OR $ 
   (i_variable_name EQ 'bias_sst4') OR (i_variable_name EQ 'stdv_sst4') OR $
   (i_variable_name EQ 'sst_triple')  OR (i_variable_name EQ 'bias_sst_triple')      OR $ 
   (i_variable_name EQ 'stdv_sst_triple') OR $
   (i_variable_name EQ 'K_490')  then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] LT CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least ' + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE INT_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(INT_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; CONST_NUMBER_OF_SCAN_LINES  = 2030;
; CONST_PIXELS_PER_SCAN_LINE  = 1354;
; CONST_PIXELS_CONTROL_POINTS = 1354 ;
; CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE = LONG(CONST_NUMBER_OF_SCAN_LINES) * LONG(CONST_PIXELS_PER_SCAN_LINE);    2748620

if (i_variable_name EQ 'qual_sst') OR (i_variable_name EQ 'qual_sst4') OR $
   (i_variable_name EQ 'qual_sst_triple') then begin
    if (num_of_dimensions NE 2) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to have 2 dimensions' + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_1_INDEX] LT CONST_PIXELS_PER_SCAN_LINE) then begin
        print, routine_name + 'ERROR: Expected dimension_1 in variable ' + i_variable_name + ' to be at least '  + CONST_PIXELS_PER_SCAN_LINE_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_1_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[INDEX_2_INDEX] LT CONST_NUMBER_OF_SCAN_LINES) then begin
        print, routine_name + 'ERROR: Expected dimension_2 in variable ' + i_variable_name + ' to be at least ' + CONST_NUMBER_OF_SCAN_LINES_CHAR + ', calculated ' + STRTRIM(STRING(size_info[INDEX_2_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[VARIABLE_TYPE_INDEX] NE BYTE_TYPE) then begin
        print, routine_name + 'ERROR: Expected type of variable ' + i_variable_name + ' to be ' + STRTRIM(STRING(BYTE_TYPE),2) + ', calculated ' + STRTRIM(STRING(size_info[VARIABLE_TYPE_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    if (size_info[NUM_OF_ELEMENTS_INDEX] LT CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE) then begin
        print, routine_name + 'ERROR: Expected variable ' + i_variable_name + ' to contain at least ' + CONST_NUM_OF_ELEMENTS_PER_TWO_DIM_VARIABLE_CHAR + ' elements, calculated ' + STRTRIM(STRING(size_info[NUM_OF_ELEMENTS_INDEX]),2) + ' in file ' + i_filename;
        o_variable_valid_flag = 0;
    endif
    verify_variable_flag = 1;
endif

; Make sure we actually did verify the given variable name.
; If not, set o_variable_valid_flag to 0 since the variable is not valid.

if (verify_variable_flag EQ 0) then o_variable_valid_flag = 0;

; If the variable is not valid, we want to report it as an error so the user will know about it.

if (o_variable_valid_flag NE 1) then begin
    i_data = "";
    msg_type = "error";
    msg = 'Cannot read variable ' + i_variable_name + ' due to invalid size or type from file ' + i_filename;
    
    donotcare = echo_message_to_screen(routine_name,msg,msg_type);
    donotcare = error_log_writer(routine_name,msg);
    donotcare = wrapper_ghrsst_notify_operator($
                        routine_name,$
                        msg_type,$
                        msg,$
                        i_data);
endif

return, o_variable_valid_flag;

end
