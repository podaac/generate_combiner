;  Copyright 2014, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION get_netcdf_variable_attribute_info,$
         i_file_id,$
         i_variable_name,$
         o_attribute_info

; Function returns a list of the attributes and values associated with a variable from NetCDF4 file.
; If i_variable_name is not defined or empty string, function will return global attributes.
;
; Assumptions:
;
;   1. The NetCDF4 file exist and is opened.  The i_file_id is valid.
;

;------------------------------------------------------------------------------------------------

; Load constants.

@data_const_config.cfg

; Define local variables.

o_read_status = SUCCESS;
debug_flag = 0;

; Get the DEBUG_MODE if it is set.

debug_module = 'get_netcdf_variable_attribute_info:';
if (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_flag = 1;
endif


;print, 'get_netcdf_variable_attribute_info: INFO, i_file_id = ', i_file_id
;print, 'get_netcdf_variable_attribute_info: INFO, i_variable_name = ',i_variable_name 

; Set default return value.
o_attribute_info = ''

; Get attribute information
if i_variable_name eq '' then begin
    CATCH, error_status
    if (error_status NE 0) then begin
        CATCH, /CANCEL
        print, 'get_netcdf_variable_attribute_info: ERROR, Function NCDF_INQUIRE failed to return file info for file id ' + STRTRIM(STRING(i_file_id),2);
        o_read_status = FAILURE;
        ; Must return immediately.
        return, o_read_status
    endif

    fileinfo = NCDF_INQUIRE(i_file_id)
    CATCH, /CANCEL
    num_attributes = fileinfo.NGATTS;
endif else begin
    CATCH, error_status
    if (error_status NE 0) then begin
        CATCH, /CANCEL
        print, 'get_netcdf_variable_attribute_info: ERROR, Function NCDF_VARID failed to return variable id for variable name ' + i_variable_name;
        o_read_status = FAILURE;
        ; Must return immediately.
        return, o_read_status
    endif

    varid   = NCDF_VARID(i_file_id, i_variable_name);
;print, 'get_netcdf_variable_attribute_info: INFO, varid = ', varid;
    CATCH, /CANCEL

    CATCH, error_status
    if (error_status NE 0) then begin
        CATCH, /CANCEL
        print, 'get_netcdf_variable_attribute_info: ERROR, Function NCDF_VARINQ failed to return variable info file id  ' +  STRTRIM(STRING(i_file_id),2) + ' variable id ' +  STRTRIM(STRING(varid),2); 
        o_read_status = FAILURE;
        ; Must return immediately.
        return, o_read_status
    endif

    varinfo = NCDF_VARINQ(i_file_id, varid);
    CATCH, /CANCEL

    ;help, varinfo;
    ;help, varinfo, /STRUCT;
    num_attributes = varinfo.NATTS;
endelse

; If attributes were found, get all the attribute names.
;print, 'get_netcdf_variable_attribute_info: INFO, num_attributes = ', num_attributes;

if num_attributes gt 0 then begin
    o_attribute_info = STRARR(num_attributes);  Create enough room to hold all the attributes.
    if (debug_flag) then begin
        print, 'SIZE(o_attribute_info,/N_ELEMENTS) = ', SIZE(o_attribute_info,/N_ELEMENTS);
    endif
    for index = 0, num_attributes - 1 do begin
        if (debug_flag) then begin
            print, 'get_netcdf_variable_attribute_info: INFO, index = ', index;
        endif
        CATCH, error_status
        if (error_status NE 0) then begin
            CATCH, /CANCEL
            if i_variable_name eq '' then begin
                print, 'get_netcdf_variable_attribute_info: ERROR, Cannot retrieve dataset id for variable name ' + i_variable_name + " index " + STRTRIM(STRING(index),2);
            endif else begin
                print, 'get_netcdf_variable_attribute_info: ERROR, Cannot retrieve dataset id for variable name ' + i_variable_name + " index " + STRTRIM(STRING(index),2) + " varid " + STRTRIM(STRING(varid),2);
            endelse
            o_read_status = FAILURE;
            ; Must return immediately.
            return, o_read_status
        endif

        if i_variable_name eq '' then begin
            attribute_name = NCDF_ATTNAME(i_file_id, index, /GLOBAL);
        endif else begin
            attribute_name = NCDF_ATTNAME(i_file_id, varid, index);
        endelse
        CATCH, /CANCEL
        if (debug_flag) then begin
            print, 'get_netcdf_variable_attribute_info: INFO, attribute_name = ', attribute_name;
        endif

        ; Now get the attribute value

        CATCH, error_status
        if (error_status NE 0) then begin
            CATCH, /CANCEL
            if i_variable_name eq '' then begin
                print, 'get_netcdf_variable_attribute_info: ERROR, Cannot retrieve dataset id for variable name ' + i_variable_name + " index " + STRTRIM(STRING(index),2);
            endif else begin
                print, 'get_netcdf_variable_attribute_info: ERROR, Cannot retrieve dataset id for variable name ' + i_variable_name + " index " + STRTRIM(STRING(index),2) + " varid " + STRTRIM(STRING(varid),2);
            endelse
            o_read_status = FAILURE;
            ; Must return immediately.
            return, o_read_status
        endif

        if i_variable_name eq '' then begin
            NCDF_ATTGET,i_file_id, attribute_name, attribute_value, /GLOBAL;
        endif else begin
            NCDF_ATTGET,i_file_id, varid, attribute_name,attribute_value;
        endelse
        CATCH, /CANCEL
        if (debug_flag) then begin
            print, 'get_netcdf_variable_attribute_info: INFO, attribute_value = ', attribute_value;
        endif

        ; Get the attribute type as well.

        attribute_type = SIZE(attribute_value,/TNAME); 
        if (debug_flag) then begin
            print, 'get_netcdf_variable_attribute_info: INFO, attribute_type = ', attribute_type;
        endif

        ; Everything is OK, we can now save the attribute name, attribute type and attribute value.
        ; Notes:
        ;    1. that we use the '|' as a delimiter between each field.  The client code should parse them
        ;    2. We also have to change any attribute value to string since we use the concatenation operator.


        ; If the type is BYTE, we may have to do a tweak since you can't do a direct BYTE to STRING casting.
;        print, 'get_netcdf_variable_attribute_info: INFO, attribute_name = ', attribute_name;
;        print, 'get_netcdf_variable_attribute_info: INFO, attribute_type = ', attribute_type;
;        print, 'get_netcdf_variable_attribute_info: INFO, attribute_value= ', attribute_value;
        if (debug_flag) then begin
           print, 'get_netcdf_variable_attribute_info: INFO, SIZE(attribute_value,/DIMENSIONS) = ', SIZE(attribute_value,/DIMENSIONS);
           print, 'get_netcdf_variable_attribute_info: INFO, SIZE(attribute_value,/N_DIMENSIONS) = ', SIZE(attribute_value,/N_DIMENSIONS);
           print, 'get_netcdf_variable_attribute_info: INFO, SIZE(attribute_value,/N_ELEMENTS) = ', SIZE(attribute_value,/N_ELEMENTS);
        endif

        if (attribute_type EQ 'BYTE') AND (SIZE(attribute_value,/N_DIMENSIONS) EQ 0) then begin
            ; Some applications are unable to properly handle signed byte 
            ; values. If values are encountered > 127, please subtract 256 from this reported value
            value_as_int = FIX(attribute_value);
;print, 'get_netcdf_variable_attribute_info: INFO, attribute_type = ', attribute_type;
;print, 'get_netcdf_variable_attribute_info: INFO, attribute_value = ', attribute_value;
            if (value_as_int GT 127) then begin
                if (debug_flag) then begin
                    print, 'get_netcdf_variable_attribute_info: INFO, Subtracting 256 from ', value_as_int;
                endif
                attribute_value = value_as_int - 256;
                if (debug_flag) then begin
                    print, 'get_netcdf_variable_attribute_info: INFO, new attribute_value ', attribute_value;
                endif
            endif
            o_attribute_info[index] = attribute_name + '|' + attribute_type + '|' + STRING(FIX(attribute_value),FORMAT='(I0)') + 'b';  Append 'b' to indicate that it is actually a byte.  Client code must parse for it.
        endif else begin
            ; The attribute flag_masks is giving the code problem.
            ; We need to see if it is an array and to extract each element into string.
            if (attribute_name NE 'flag_masks') then begin
                o_attribute_info[index] = attribute_name + '|' + attribute_type + '|' + STRTRIM(STRING(attribute_value),2);
            endif else begin
                 ; If the value is an array of things, we have to loop to extract them.
                 num_of_values = SIZE(attribute_value,/N_ELEMENTS);
                 if (num_of_values GT 1) then begin
                     value_index = 0;
                     values_as_one_string = "ARRAY " + STRTRIM(STRING(num_of_values),2); Start out with ARRAY then add the array size, then add each value.
                     ; Create values_as_one_string so it looks like this: ARRAY 32 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
                     while (value_index LT num_of_values) do begin
                         values_as_one_string = values_as_one_string + " " + STRTRIM(STRING(attribute_value[value_index]),2);
                         value_index = value_index + 1;
                     end
                     o_attribute_info[index] = attribute_name + '|' + attribute_type + '|' + values_as_one_string;
                 endif else begin
                     ; If the value is just a plan variable, we convert it to string and save it.
                     o_attribute_info[index] = attribute_name + '|' + attribute_type + '|' + STRTRIM(STRING(attribute_value),2);
                 endelse
                if (debug_flag) then begin
                    print, debug_module + 'o_attribute_info = ' +  o_attribute_info[index];
                endif
            endelse
        endelse
;        print, 'get_netcdf_variable_attribute_info: INFO, o_attribute_info = [' + o_attribute_info[index] + ']';
    endfor
endif

; ---------- Close up shop ---------- 
return, o_read_status;
end
