;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION add_optional_milliseconds_to_milliseconds_total,$
             i_time_field,$
             i_milli_sec_total

; Function add the optional milliseconds to the milliseconds value.
; The optional milliseconds are available in the characters index 20 through 22 after the period.
;
;     2003-03-01T10:55:05.456Z
;     012345678901234567890123
;
;------------------------------------------------------------------------------------------------

; Load constants.

@modis_data_config.cfg

o_milli_sec_total = i_milli_sec_total;  Start out assigning the output to the original milliseconds total.  If the optional part if not provided, we have done nothing.

routine_name = 'add_optional_milliseconds_to_milliseconds_total';
debug_module = 'add_optional_milliseconds_to_milliseconds_total:';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif

; Get the length of the time field.
time_field_length = STRLEN(i_time_field);

if ((STRMID(i_time_field,19,1) EQ '.') AND (time_field_length GE 22)) then begin
   millisec_part_as_string = STRMID(i_time_field,20,3);
   ; Only attempt to fetch the milliseconds part if millisec_part_as_string is a number.
   ; Otherwise, ignore them.
   if (strnumber(millisec_part_as_string,millisec_part_as_number)) then begin
       if (debug_mode) then begin
           print, debug_module,'o_milli_sec_total ', o_milli_sec_total;
       endif
       millisec_part = FIX(millisec_part_as_number);
       o_milli_sec_total = o_milli_sec_total + millisec_part;
       if (debug_mode) then begin
           print, debug_module,'Extracting milliseconds portion from i_time_field ' + i_time_field
           print, debug_module,'millisec_part ', millisec_part;
           print, debug_module,'o_milli_sec_total ', o_milli_sec_total;
       endif
   endif else begin
       print, routine_name,':WARN: millisec_part_as_string [' + millisec_part_as_string + '] is not a number.  Cannot add to end_millisec variable.';
   endelse
endif

return, o_milli_sec_total;

END
