#!/usr/local/bin/perl

#  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine to unlock a file using the File::NFSLock module.
#
# This function is meant to work on NFS mounted file system.

use File::NFSLock qw(uncache);
use Fcntl qw(LOCK_EX LOCK_NB);

my $debug_flag = 0;

if ($ENV{GHRSST_MODIS_L2_COMBINER_DEBUG_MODE} eq 'true') { $debug_flag = 1; }

sub nfs_unlock_file {
    my $i_the_lock   = shift;
    my $i_file_name  = shift;

    my $routine_name = "nfs_unlock_file";
    if ($debug_flag) { print localtime() . " DEBUG [" . $routine_name . "] Attempting to unlock file $i_file_name\n"; }

    # Check to make sure the lock is defined.  Returned otherwise.
    if (!(defined($i_the_lock))) {
        print localtime() . " WARN [" . $routine_name . "] Lock is not defined.  Nothing to do for file $i_file_name.\n";
        return 1;
    }

    $i_the_lock->unlock or die "$routine_name flock() failed for $i_file_name: $!";

    if ($debug_flag) { print localtime() . " DEBUG [" . $routine_name . "] File $i_file_name is now unlocked.\n"; }

    # Undefine the lock, thus allow the file $i_file_name to be deleted.

    undef $i_the_lock;

    # The actual file name saved by the nfs_lock_file() function has the ".NFSLock" extension. 
    # Check to see if the file is deleted.
    my $actual_lock_filename = $i_file_name . ".NFSLock";
    if (-e $actual_lock_filename) {
        #if ($debug_flag) { print localtime() . " " . $routine_name . "File $i_file_name is still around.  Something is wrong with the File::NFSLock:unlock() function.\n"; }
        print localtime() . " ERROR [" . $routine_name . "] File $actual_lock_filename is still around.  Something is wrong with the File::NFSLock:unlock() function.\n";
    } else {
        if ($debug_flag) { print localtime() . " DEBUG [" . $routine_name . "] File $actual_lock_filename is deleted as expected.\n"; }
    }
}
#return 1;
