#!/usr/local/bin/perl
#  Copyright 2012, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine to report sigevent.  It will call the IDL program written by Charles Thompson and modified
# to taylor to the GHRSST project.
#
#------------------------------------------------------------------------------------------------

# Location of GHRSST Perl and IDL library functions.

$GHRSST_PERL_LIB_DIRECTORY = $ENV{GHRSST_PERL_LIB_DIRECTORY};
$GHRSST_IDL_LIB_DIRECTORY  = $ENV{GHRSST_IDL_LIB_DIRECTORY};

sub ghrsst_notify_operator { 

my $o_status = 0;

# Get inputs

my $routine_name = shift;
my $msg_type     = shift; 
my $msg          = shift; 
my $email        = shift; 
my $sigevent     = shift; 
my $temp_dir     = shift; 
my $msg2report   = shift; 
my $sigevent_data = shift; 

# Where msg2report can be
#   0=suppress all messages
#   1=error
#   2=warning
#   4=information, 
#   3=error+warning
#   5=error+information,
#   6=warning+information
#   7=report all messages

my $idl_argument_strings = "";
my $rt_flag = "";
my $call_system_command_str = "";

$idl_argument_strings = "-args \"$routine_name\" \"$msg_type\" \"$msg\" \"$email\"   \"$sigevent\" \"$temp_dir\" \"$msg2report\" \"$sigevent_data\" ";

#
# Create the argument lists to system command.
#

my @args = ("/usr/local/bin/idl");

#
# Make the system call with arguments from idl_argument_strings variable.
#

$rt_flag = "-quiet -rt=$GHRSST_IDL_LIB_DIRECTORY/ghrsst_notify_operator.sav";
$call_system_command_str = "$args[0] $rt_flag $idl_argument_strings";

#print "call_system_command_str [$call_system_command_str]\n";
#exit(0);

system("$call_system_command_str")  == 0 or die "ghrsst_notify_operator: $call_system_command_str failed: $?";

#
# Check for errors.
#

if ($? == -1) {
    print "ghrsst_notify_operator: system $args[0] < $args[1] failed to execute: $?\n";
    $o_status = 1;
} elsif ($? == 256){
    print "ghrsst_notify_operator: Cannot find file $args[1].\n";
    $o_status = 1;
} elsif ($? == 0){
#            print "ghrsst_notify_operator: system $args[0] < $args[1] executed with: $?\n";
#            print "ghrsst_notify_operator: Everything is OK.\n";
    $o_status = 0;
} else {
        print "ghrsst_notify_operator: system $args[0] < $args[1] executed with: $?\n";
    $o_status = 1;
}
    return ($o_status);
}

#------------------------------------------------------------------------------------------------------------------------

#my $routine_name="ghrsst_notify_operator.pl";
#my $msg_type = "information";
#my $msg = "hello there";
#my $email = "Qui.T.Chau@jpl.nasa.gov";
#my $sigevent = "SIGEVENT=http://lanina.jpl.nasa.gov:8100&category=UNCATEGORIZED&provider=jpl";
#my $temp_dir = "/tmp/";
#my $msg2report = 7;
#
#ghrsst_notify_operator($routine_name,$msg_type,$msg,$email,$sigevent,$temp_dir,$msg2report);

