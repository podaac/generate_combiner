#!/usr/bin/perl
#/usr/local/bin/perl
#  Copyright 2013, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine to report a sigevent.
#
# A return parameter o_status will be set to 1 if good, and -1 if bad.
#------------------------------------------------------------------------------------------------

$GHRSST_PYTHON_LIB_DIRECTORY = $ENV{GHRSST_PYTHON_LIB_DIRECTORY};

$g_debug_flag    = 0;  # A value of 1 will print debug statements.
$g_function_name = "raise_event"; # This function name.

sub raise_sigevent { 

    # Get inputs.

    my $sigevent_url         = shift; 
    my $sigevent_provider    = shift;
    my $sigevent_source      = shift;
    my $sigevent_type        = shift;
    my $sigevent_category    = shift;
    my $sigevent_description = shift;
    my $sigevent_data        = shift; 
    my $sigevent_debug_flag  = shift; 

    # Output parameter(s)

    my $o_status = 1;  # A value of 1 is good, -1 is bad.

    # Set the global debug flag if the user requested it.

    if ($sigevent_debug_flag eq "true") {
        $g_debug_flag = 1;
    }

    # Call ghrsst_notify_operator with appropriate arguments
    my $sigevent_email_to = "None";
    my $temp_dir = "/tmp";
    my $sigevent_clause = "None";
    my $msg2report = 7;

    # Print arguments
    # print "sigevent_source                            = $sigevent_source\n";
    # print "sigevent_type                              = $sigevent_type\n";
    # print "sigevent_description                       = $sigevent_description\n";
    # print "sigevent_email_to                          = $sigevent_email_to\n";
    # print "sigevent_clause                            = $sigevent_clause\n";
    # print "temp_dir                                   = $temp_dir\n";
    # print "msg2report                                 = $msg2report\n";
    # print "sigevent_data                              = $sigevent_data\n";

    $python_argument_strings = "-t \"$sigevent_type\" -d \"$sigevent_source:$sigevent_description\" -i \"$sigevent_data\"";
    $call_system_command_str = "$GHRSST_PYTHON_LIB_DIRECTORY/notify.py $python_argument_strings";
    system("$call_system_command_str")  == 0 or die "ghrsst_notify_operator: $call_system_command_str failed: $?";

    #
    # Check for errors.
    #
    if ($? == -1) {
        print "ghrsst_notify_operator - ERROR: system $args[0] < $args[1] failed to execute: $?\n";
        $o_status = 1;
    } elsif ($? == 256){
        print "ghrsst_notify_operator - ERROR: Cannot find file $args[1].\n";
        $o_status = 1;
    } elsif ($? == 0){
        print "ghrsst_notify_operator - INFO: system $args[0] < $args[1] executed with: $?\n";
        print "ghrsst_notify_operator: Everything is OK.\n";
        $o_status = 0;
    } else {
        print "ghrsst_notify_operator - ERROR: system $args[0] < $args[1] executed with: $?\n";
        $o_status = 1;
    }
    return ($o_status);
}

#------------------------------------------------------------------------------------------------------------------------

# my $sigevent_url = "https://test.test.com";
# my $sigevent_provider      = "JPL";
# my $sigevent_source        = "GHRSST-PROCESSING";
# my $sigevent_type          = "ERROR";
# my $sigevent_category      = 'GENERATE';
# my $sigevent_description   = $sigevent_msg = "IDL or combiner code may be not be available.  Something went wrong with executing [ test commmand ]";
# $sigevent_data = "";
# raise_sigevent($sigevent_url,$sigevent_provider,$sigevent_source,$sigevent_type,$sigevent_category,$sigevent_description,$sigevent_data);