#!/usr/local/bin/perl

#  Copyright 2012, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Given list of names, this function will return a list of SS4 with no matching SST files.
# This list can then be used in error handling.
#
#------------------------------------------------------------------------------------------------

$GHRSST_PERL_LIB_DIRECTORY = $ENV{GHRSST_PERL_LIB_DIRECTORY};

sub filter_sst4_for_error_handling {

    # Returned status.  Value of 0 means ok, 1 means bad.

    my $o_status = 0;
    my @o_filtered_sst4_filenames = ();          # Contains a list of SST4 names with no matching SST file.

    #
    # Get input(s).
    #

    my $i_mixed_sst_sst4_filenames_ref  = shift;     # Contains a list of all names in no particular order.

    # Get the references.

    my @mixed_sst_sst4_filenames_list = @$i_mixed_sst_sst4_filenames_ref;

    #
    # Local variables.
    #

    # For every name in SST list, we look in the SST4 list. If there is a match, we save it in a list of o_filtered_sst_sst4_filenames.

    my $sst4_name_in_sst_flag = 0;
    my $index_found_to_sst4_filenames = 0;
    my $num_names_in_mixed_sst_sst4_list = @mixed_sst_sst4_filenames_list;

    foreach $sst4_name_to_look (@mixed_sst_sst4_filenames_list) {
        chomp($sst4_name_to_look);

        if ($sst4_name_to_look =~ m/SST4$/) {

            # Query whether the name in variable sst4_name_to_look is in sst_filenames_list.
            # If yes, the value of sst4_name_in_sst_flag will be 1. 

            ($sst4_name_in_sst_flag,$index_found_to_sst4_filenames) = is_sst4_name_in_sst_list($sst4_name_to_look,\@mixed_sst_sst4_filenames_list);

            # If did not find a matching SST, we save this SST4 name.

            if ($sst4_name_in_sst_flag eq 0) {
                push (@o_filtered_sst4_filenames, $sst4_name_to_look);
            }
        }
    }

    # ---------- Close up shop ----------
    return ($o_status,\@o_filtered_sst4_filenames);

} # end sub filter_sst4_for_error_handling

#------------------------------------------------------------------------------------------------------------------------
sub is_sst4_name_in_sst_list {

    my $i_sst_full_name_to_search  = shift;
    my $i_sst4_filenames_ref  = shift;

    my $o_sst4_name_in_sst_flag  = 0;
    my $o_index_found_to_sst4_filenames = 0;

    # Get the references.
    my @sst4_filenames_list = @$i_sst4_filenames_ref;

    # Remove the directory name.
    my @splitted_tokens = split(/\//,$i_sst_full_name_to_search);
    my $num_tokens = @splitted_tokens;
    my $name_to_search = $splitted_tokens[$num_tokens-1];  # Get just the name. 
    chomp ($name_to_search);                               # Remove the carriage return.
    my $look_for = "SST4";
    my $find = quotemeta $look_for;
    my $replace_with = "SST";

    $name_to_search =~ s/$find/$replace_with/;               # Replace SST4 with SST.  We are looking for the matching SST name.
    # Add the '$' at the end to signify that we want the SST to be the last characters.
    $name_to_search = $name_to_search . "\$";

    # Loop through each item in sst4_filenames_list for a match of name_to_search variable 

    my $found_matching_sst_flag = 0;
    my $index_to_sst_filenames = 0;
    my $sst4_filenames_list_size = @sst4_filenames_list;

    while (($found_matching_sst_flag == 0) && ($index_to_sst_filenames < $sst4_filenames_list_size)) {
        # Ignore the .md5 file
        if (rindex($sst4_filenames_list[$index_to_sst_filenames],".md5") >= 0) {
            # Do nothing;
        } else {
            if ($sst4_filenames_list[$index_to_sst_filenames] =~ m/$name_to_search/) { 
                $found_matching_sst_flag = 1;
                $o_index_found_to_sst4_filenames = $index_to_sst_filenames;
            }
        }
        $index_to_sst_filenames = $index_to_sst_filenames + 1;
    }
    $o_sst4_name_in_sst_flag = $found_matching_sst_flag;
    return ($o_sst4_name_in_sst_flag,$o_index_found_to_sst4_filenames);
}

#my @abc = ("one_SST","one_SST4","two_SST4");
#filter_sst4_for_error_handling (\@abc);
