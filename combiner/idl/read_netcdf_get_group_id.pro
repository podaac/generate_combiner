;  Copyright 2014, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION read_netcdf_get_group_id,$
         i_file_name,$
         i_file_id,$
         i_variable_name

; Function returns the group id, given a variable name.
;
; Assumptions:
;
;   1. The NetCDF4 file exist and is opened.  The file_id is valid.
;

;------------------------------------------------------------------------------------------------
o_group_id = -1;  This is default to an invalid group id.

; Edit this table very carefully.  Each entry contains the variable and the group it belongs to.
; The code will use this table to find the group a variable belongs to.
; It then uses the group name to query the file for the group id and returns it to the calle.

table_len = 22; Make sure this number is large enough to accommodate all subsequent lines:

lookup_table_of_group_and_variable = STRARR(table_len);
lookup_table_of_group_and_variable[0]  = "bias_sst          geophysical_data";
lookup_table_of_group_and_variable[1]  = "bias_sst4         geophysical_data";
lookup_table_of_group_and_variable[2]  = "chlor_a           geophysical_data";
lookup_table_of_group_and_variable[3]  = "Kd_490            geophysical_data";
lookup_table_of_group_and_variable[4]  = "l2_flags          geophysical_data";
lookup_table_of_group_and_variable[5]  = "qual_sst4         geophysical_data";
lookup_table_of_group_and_variable[6]  = "qual_sst          geophysical_data";
lookup_table_of_group_and_variable[7]  = "sst               geophysical_data";
lookup_table_of_group_and_variable[8]  = "sst4              geophysical_data";
lookup_table_of_group_and_variable[9]  = "stdv_sst          geophysical_data";
lookup_table_of_group_and_variable[10] = "stdv_sst4         geophysical_data";
lookup_table_of_group_and_variable[11] = "cntl_pt_cols      navigation_data";
lookup_table_of_group_and_variable[12] = "cntl_pt_rows      navigation_data";
lookup_table_of_group_and_variable[13] = "latitude          navigation_data";
lookup_table_of_group_and_variable[14] = "longitude         navigation_data";
lookup_table_of_group_and_variable[15] = "msec              scan_line_attributes";
lookup_table_of_group_and_variable[16] = "year              scan_line_attributes";
lookup_table_of_group_and_variable[17] = "day               scan_line_attributes";

; Add these to support VIIRS datasets which has "_triple" in the variable names.
; Don't forget to update table_len to 22 to allocate enough room for the 4 new variables.

lookup_table_of_group_and_variable[18] = "sst_triple        geophysical_data";
lookup_table_of_group_and_variable[19] = "qual_sst_triple   geophysical_data";
lookup_table_of_group_and_variable[20] = "bias_sst_triple   geophysical_data";
lookup_table_of_group_and_variable[21] = "stdv_sst_triple   geophysical_data";



; Look for the variable name and returns the group name.

found_variable_flag = 0;
index_to_table = 0;
group_name = "";
while ((found_variable_flag EQ 0) AND (index_to_table LT table_len)) do begin
;    print, "lookup_table_of_group_and_variable = ", lookup_table_of_group_and_variable[index_to_table];
    splitted_token = STRSPLIT(lookup_table_of_group_and_variable[index_to_table], /EXTRACT);
;    print, splitted_token[0], ":", splitted_token[1];
    if (splitted_token[0] EQ i_variable_name) then begin
        group_name = splitted_token[1]; 
    endif
    index_to_table++;
end

;print, "read_netcdf_get_group_id: i_variable_name = [", i_variable_name, "]";
;print, "read_netcdf_get_group_id: group_name      = [", group_name, "]";

; If the group name is not blank, we will attempt to query the file for the group id.
if (group_name NE "") then begin
    parentId = NCDF_GROUPSINQ(i_file_id);
    parentName = NCDF_GROUPNAME(parentId[0]);
;    help, parentId;
;    print, N_ELEMENTS(parentId)
    parent_index = 0;
    found_parent_id_flag = 0;
    found_parent_id_value = -1;
    while (parent_index LT  N_ELEMENTS(parentId)) AND (found_parent_id_flag EQ 0) do begin
        parentName = NCDF_GROUPNAME(parentId[parent_index]);
        ; If we have found a parent that shares the same name as our group name, we have found the group id.
        ; Save it and exit.
        if (parentName EQ group_name) then begin
            o_group_id = parentId[parent_index];
            found_parent_id_flag = 1; 
        endif
        parent_index++;
    end
endif

; ---------- Close up shop ---------- 
return, o_group_id;  Leave the file open.
end
