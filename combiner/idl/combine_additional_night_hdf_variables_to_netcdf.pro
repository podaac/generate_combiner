;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION combine_additional_night_hdf_variables_to_netcdf,i_filename,i_out_filename

; Function combine additional HDF variables to NetCDF file if the data was marked as "Night" or "Mixed".
;
; Assumptions:
;
;   1. TBD.

;------------------------------------------------------------------------------------------------

; Load constants.

@modis_data_config.cfg

; Define local variables.

r_status = SUCCESS;

; Get the DEBUG_MODE if it is set.

debug_module = 'combine_additional_night_hdf_variables_to_netcdf:';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif

r_long_name = "DUMMY_LONG_NAME";
r_units     = "DUMMY_UNITS";

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Read additional night arrays from HDF file and write to HDF file.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

i_variable_short_name = 'sst4';

status = read_hdf_variable(i_filename,i_variable_short_name,$
                           r_dataset_array, r_slope,$
                           r_intercept,r_data_type,r_fill_value,r_valid_min,r_valid_max);

if (debug_mode) then begin
    print, debug_module,'i_variable_short_name: ', i_variable_short_name;
    print, debug_module,'r_data_type   : ', r_data_type;
    if (N_ELEMENTS(r_fill_value)) then begin
        print, debug_module,'r_fill_value  : ', r_fill_value;
    endif
    if (N_ELEMENTS(r_valid_min)) then begin
        print, debug_module,'r_valid_min   : ', r_valid_min;
    endif
    if (N_ELEMENTS(r_valid_max)) then begin
        print, debug_module,'r_valid_max   : ', r_valid_max;
    endif
endif

if (status NE SUCCESS) then begin
    print, 'combine_additional_night_hdf_variables_to_netcdf: INFO, No additional night variables exist.'
    r_status = FAILURE;
    l_status = error_log_writer('combine_additional_night_hdf_variables_to_netcdf','Expected variable ' + i_variable_short_name + ' not found.');
    ; Must return immediately.
;    return, r_status
endif else begin

; Set some default to match the NetCDF version.

r_long_name  = '4um Sea Surface Temperature';
r_units      = 'degree_C';
r_fill_value = -32767s ;
r_valid_min  = -1000s ;
r_valid_max  = 10000s ;

r_status = write_control_points_variable_to_netcdf(i_out_filename,i_variable_short_name,$
                           r_dataset_array , r_long_name,$
                           r_units,r_data_type,r_slope,r_intercept,r_fill_value,r_valid_min,r_valid_max);
endelse

; Be sure to make the variables to undefined.
if (N_ELEMENTS(r_fill_value)) then begin
tempvar = SIZE(TEMPORARY(r_fill_value))
endif
if (N_ELEMENTS(r_valid_min)) then begin
tempvar = SIZE(TEMPORARY(r_valid_min))
endif
if (N_ELEMENTS(r_valid_max)) then begin
tempvar = SIZE(TEMPORARY(r_valid_max))
endif

;--------------------------------------------------------------------------------
; Read bias_sst4 from HDF file.
;--------------------------------------------------------------------------------

i_variable_short_name = 'bias_sst4';

status = read_hdf_variable(i_filename,i_variable_short_name,$
                           r_bias_sst4, r_slope_bias_error,$
                           r_intercept_bias_error,r_data_type,r_fill_value,r_valid_min,r_valid_max);

if (debug_mode) then begin
    print, debug_module,'i_variable_short_name: ', i_variable_short_name;
    print, debug_module,'r_data_type   : ', r_data_type;
    if (N_ELEMENTS(r_fill_value)) then begin
        print, debug_module,'r_fill_value  : ', r_fill_value;
    endif
    if (N_ELEMENTS(r_valid_min)) then begin
        print, debug_module,'r_valid_min   : ', r_valid_min;
    endif
    if (N_ELEMENTS(r_valid_max)) then begin
        print, debug_module,'r_valid_max   : ', r_valid_max;
    endif
endif

if (status NE SUCCESS) then begin
    print, 'combine_additional_night_hdf_variables_to_netcdf: Failed in read_hdf_variable().'
    r_status = FAILURE;
    l_status = error_log_writer('combine_additional_night_hdf_variables_to_netcdf','Expected variable ' + i_variable_short_name + ' not found.');
    ; Must return immediately.
;    return, r_status
endif else begin

; Set some default to match the NetCDF version.

r_long_name = '4um Sea Surface Temperature Bias';
r_data_type = 'SHORT';

r_status = write_control_points_variable_to_netcdf(i_out_filename,i_variable_short_name,$
                           r_bias_sst4, r_long_name,$
                           r_units,r_data_type,r_slope_bias_error,r_intercept_bias_error,r_fill_value,r_valid_min,r_valid_max);
endelse

; Be sure to make the variables to undefined.
if (N_ELEMENTS(r_fill_value)) then begin
tempvar = SIZE(TEMPORARY(r_fill_value))
endif
if (N_ELEMENTS(r_valid_min)) then begin
tempvar = SIZE(TEMPORARY(r_valid_min))
endif
if (N_ELEMENTS(r_valid_max)) then begin
tempvar = SIZE(TEMPORARY(r_valid_max))
endif

;--------------------------------------------------------------------------------
; Read stdv_sst4 from HDF file.
;--------------------------------------------------------------------------------

i_variable_short_name = 'stdv_sst4';

status = read_hdf_variable(i_filename,i_variable_short_name,$
                           r_stdv_sst4, r_slope_standard_deviation_sst,$
                           r_intercept_standard_deviation_sst,r_data_type,r_fill_value,r_valid_min,r_valid_max);

if (debug_mode) then begin
    print, debug_module,'i_variable_short_name: ', i_variable_short_name;
    print, debug_module,'r_data_type   : ', r_data_type;
    if (N_ELEMENTS(r_fill_value)) then begin
        print, debug_module,'r_fill_value  : ', r_fill_value;
    endif
    if (N_ELEMENTS(r_valid_min)) then begin
        print, debug_module,'r_valid_min   : ', r_valid_min;
    endif
    if (N_ELEMENTS(r_valid_max)) then begin
        print, debug_module,'r_valid_max   : ', r_valid_max;
    endif
endif

if (status NE SUCCESS) then begin
    print, 'combine_additional_night_hdf_variables_to_netcdf: Failed in read_hdf_variable().'
    r_status = FAILURE;
    l_status = error_log_writer('combine_additional_night_hdf_variables_to_netcdf','Expected variable ' + i_variable_short_name + ' not found.');
    ; Must return immediately.
;    return, r_status
endif else begin

; Set some default to match the NetCDF version.
r_long_name = '4um Sea Surface Temperature Standard Deviation';
r_units = 'degree_C' ;
r_data_type = 'SHORT';
r_fill_value = -32767s ;
r_valid_min = -10000s ;
r_valid_max = 10000s ;

r_status = write_control_points_variable_to_netcdf(i_out_filename,i_variable_short_name,$
                           r_stdv_sst4, r_long_name,$
                           r_units,r_data_type,r_slope_standard_deviation_sst,r_intercept_standard_deviation_sst,r_fill_value,r_valid_min,r_valid_max);
endelse

; Be sure to make the variables to undefined.
if (N_ELEMENTS(r_fill_value)) then begin
tempvar = SIZE(TEMPORARY(r_fill_value))
endif
if (N_ELEMENTS(r_valid_min)) then begin
tempvar = SIZE(TEMPORARY(r_valid_min))
endif
if (N_ELEMENTS(r_valid_max)) then begin
tempvar = SIZE(TEMPORARY(r_valid_max))
endif

;--------------------------------------------------------------------------------
; Read qual_sst4 from HDF file and write to HDF file.
;--------------------------------------------------------------------------------

i_variable_short_name = 'qual_sst4';

status = read_hdf_variable(i_filename,i_variable_short_name,$
                           r_qual_sst4, r_slope,$
                           r_intercept,r_data_type,r_fill_value,r_valid_min,r_valid_max);

if (debug_mode) then begin
    print, debug_module,'i_variable_short_name: ', i_variable_short_name;
    print, debug_module,'r_data_type   : ', r_data_type;
    if (N_ELEMENTS(r_fill_value)) then begin
        print, debug_module,'r_fill_value  : ', r_fill_value;
    endif
    if (N_ELEMENTS(r_valid_min)) then begin
        print, debug_module,'r_valid_min   : ', r_valid_min;
    endif
    if (N_ELEMENTS(r_valid_max)) then begin
        print, debug_module,'r_valid_max   : ', r_valid_max;
    endif
endif

if (status NE SUCCESS) then begin
    print, 'combine_additional_night_hdf_variables_to_netcdf: Failed in read_hdf_variable().'
    r_status = FAILURE;
    l_status = error_log_writer('combine_additional_night_hdf_variables_to_netcdf','Expected variable ' + i_variable_short_name + ' not found.');
    ; Must return immediately.
;    return, r_status
endif else begin

; Set some default to match the NetCDF version.
r_long_name = '4um Quality Levels, Sea Surface Temperature';

r_status = write_control_points_variable_to_netcdf(i_out_filename,i_variable_short_name,$
                           r_qual_sst4, r_long_name,$
                           undefined_units,r_data_type,r_slope,r_intercept,r_fill_value,r_valid_min,r_valid_max);
endelse

; ---------- Close up shop ---------- 

return, r_status
end
