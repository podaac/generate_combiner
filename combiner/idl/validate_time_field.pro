;  Copyright 2015, by the California Institute of Technology.  ALL RIGHTS
;  RESERVED. United States Government Sponsorship acknowledged. Any commercial
;  use must be negotiated with the Office of Technology Transfer at the
;  California Institute of Technology.
;
; $Id$
; DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

FUNCTION validate_time_field,$
             i_attribute_name,$
             i_attribute_value,$
             o_timestamp_string

; Function validate the time field which is in this format: 2003-03-01T10:55:05Z
; and returns 1 if the field is valid and 0 if not.
; Function also return an optional o_timestamp_string
;
; It uses the TIMESTAMP function to perform the conversion to a valid timestamp.  An exception
; will be thrown and caught if the input the function is invalid.
;
;------------------------------------------------------------------------------------------------

; Load constants.

@modis_data_config.cfg

; Define local variables.

o_time_field_valid_flag = SUCCESS;  Start out assume the the TIMESTAMP conversion is successful.

routine_name = "validate_time_field:";
msg_type = "";
i_data = "";

; Get the DEBUG_MODE if it is set.

debug_module = 'validate_time_field:';
debug_mode = 0
if (STRUPCASE(GETENV('GHRSST_MODIS_L2_COMBINER_DEBUG_MODE')) EQ 'TRUE') then begin
    debug_mode = 1;
endif
 
;
; Read all the string global attributes the start time and end time as strings.  Must convert them to seconds.
;

; The time field has this format:
;
;     2003-03-01T10:55:05Z
;     0123456789012345678
;                11
;                 12
;     2003-03-01T10:55:05Z
;                  13
;                   14
;     2003-03-01T10:55:05Z
;                    15
;                     16
;                      17

YEAR_INDEX   = 0;
MONTH_INDEX  = 1;
DAY_INDEX    = 2;
HOUR_INDEX   = 3;
MINUTE_INDEX = 4;
SECOND_INDEX = 5;

; Extract each individual fields from the time field into o)time_field_array.

o_extract_status = extract_time_field_to_array(i_attribute_value,o_time_field_array);;

if (o_extract_status EQ FAILURE) then begin
    o_time_field_valid_flag = FAILURE;
    return, o_time_field_valid_flag;
endif

CATCH, error_status
if (error_status NE 0) then begin
    print, debug_module,'ERROR, Cannot convert to TIMESTAMP from value ' + i_attribute_value;
    CATCH, /CANCEL
    o_time_field_valid_flag = FAILURE;
    return, o_time_field_valid_flag;
endif

; Attempt to convert to TIMESTAMP.  If it fails, the CATCH clause will be executed above.

o_timestamp_string = TIMESTAMP(YEAR = o_time_field_array[YEAR_INDEX], MONTH  = o_time_field_array[MONTH_INDEX],  DAY    = o_time_field_array[DAY_INDEX], $
                               HOUR = o_time_field_array[HOUR_INDEX], MINUTE = o_time_field_array[MINUTE_INDEX], SECOND = o_time_field_array[SECOND_INDEX]);

; If we got to here, the TIMESTAMP conversion was successful.

if (debug_mode) then begin
    print, debug_module + 'DEBUG: o_timestamp_string [' + o_timestamp_string + ']'
endif

return, o_time_field_valid_flag;

end
