#!/usr/local/bin/perl
#  Copyright 2016, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine to build the combined file output filename.

$GHRSST_PERL_LIB_DIRECTORY = $ENV{GHRSST_PERL_LIB_DIRECTORY};

use File::Basename;

#------------------------------------------------------------------------------------------------------------------------
sub create_combined_file_final_location {

    # Create the combined file final location
    # We use the value of i_processing_type together with the name to figure out where to place the file.

    my $i_sst_filename = shift;
    my $i_output_directory    = shift;
    my $i_processing_type     = shift;

    my $o_combined_day_file_final_location = "";
    my $o_combined_night_file_final_location = "";   

    # Removing any extra trailing slashes.

    my $upper_level_output_directory = strip_trailing_slash($i_output_directory) . '/' . $i_processing_type;


    my @splitted_tokens = split(/\//,$i_sst_filename);
    my $num_tokens = @splitted_tokens;
    my $name_only = $splitted_tokens[$num_tokens-1];  # Get just the name.   We assume the name is the last token.

    # Split the file name only V2016001000000.L2_SNPP_SST.nc to get access to the string "L2_SNPP_SST" and then to the SNPP
    my @name_split_tokens = split(/\./,$name_only);   # Split into V2016001000000 L2_SNPP_SST nc
    my @sensor_split_tokens = split(/_/,$name_split_tokens[1]);
    my $sensor_name = $sensor_split_tokens[1];

    my $day_file_extension   = "." . $sensor_name . "_GSSTD";   # To get .SNPP_GSSTD
    my $night_file_extension = "." . $sensor_name . "_GSSTN";   # To get .SNPP_GSSTN

    # Parse the file name for year and day of year so we know where to move the file to.
    #
    # The year is the 2nd token, 4 characters long, the day of year is the 6th token, 3 characters long:
    #
    #     V2016243000000.L2_SNPP_SST.nc
    #     01234567

    my $year_portion = substr($name_only,1,4);
    my $day_of_year_portion = substr($name_only,5,3);

    $upper_level_output_directory = $upper_level_output_directory . "/" . $year_portion;
    $upper_level_output_directory = $upper_level_output_directory . "/" . $day_of_year_portion;

    # Get the name up to the first dot.
    # From V2016243000000.L2_SNPP_SST.nc return V2016243000000
    my $token_before_dot = substr($name_only,0, index($name_only,'.'));

    if (index($i_processing_type,"REFINED") >= 0) {
        # /data/dev/scratch/qchau/scratch/VIIRS_QUICKLOOK/2016/245/V2016245021800.SNPP_GSSTD.nc
        # /data/dev/scratch/qchau/scratch/VIIRS_QUICKLOOK/2016/245/V2016245023000.SNPP_GSSTN.nc
        $o_combined_day_file_final_location   =  $upper_level_output_directory . "/refined_" . $token_before_dot . $day_file_extension   . ".nc";
        $o_combined_night_file_final_location =  $upper_level_output_directory . "/refined_" . $token_before_dot . $night_file_extension . ".nc";
    } else {
        $o_combined_day_file_final_location   =  $upper_level_output_directory . "/"         . $token_before_dot . $day_file_extension   . ".nc";
        $o_combined_night_file_final_location =  $upper_level_output_directory . "/"         . $token_before_dot . $night_file_extension . ".nc";
    }
    return($o_combined_day_file_final_location,$o_combined_night_file_final_location);
}

#------------------------------------------------------------------------------------------------------------------------
sub strip_trailing_slash {
    # If a name ends with a slash, function will remove it.
    my $i_name = shift;

    my $o_stripped_name = $i_name;

    # Get the last character from the input name.

    my $name_length = length($i_name);
    my $last_character = substr($i_name,($name_length-1));

    # If the name ends with a slash, get just up to the slash, not including.
    if ($last_character eq '/') {
        $o_stripped_name = substr($i_name,0,$name_length-1); # Copy up to the '/' character.
    }
   return ($o_stripped_name);
}

#------------------------------------------------------------------------------------------------------------------------
sub log_this {
    # Function to log a message to screen.
    my $i_log_type      = shift;  # Possible types are {INFO,WARN,ERROR}
    my $i_function_name = shift;  # Where the logging is coming from.  Useful in debuging if something goes wrong.
    my $i_log_message   = shift;  # The text you wish to log screen.

    my $now_is = localtime;

    print $now_is . " " . $i_log_type . " [" . $i_function_name . "] " . $i_log_message . "\n";
}
